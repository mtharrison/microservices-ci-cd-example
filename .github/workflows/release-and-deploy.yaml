name: Build, Release and Deploy

on:
  push:
    tags:
    - '*'

jobs:
  release-api:
    name: Build and Release API
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'

    - name: Test code
      run: |
        cd api
        npm i
        npm test

    - name: Set some variables
      id: vars
      run: |
        echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/*/})
        echo ::set-output name=image::mtharrison/microservices-ci-cd-example-api

    - name: Login to DockerHub
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build the tagged Docker image
      run: docker build api -t ${{steps.vars.outputs.image}}:${{steps.vars.outputs.tag}}

    - name: Push the tagged Docker image
      run: |
        docker push ${{steps.vars.outputs.image}}:${{steps.vars.outputs.tag}}
        echo "${{steps.vars.outputs.tag}}" > version.txt

  release-frontend:
    name: Build and Release Frontend
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'

    - name: Set some variables
      id: vars
      run: |
        echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/*/})
        echo ::set-output name=image::mtharrison/microservices-ci-cd-example-frontend

    - name: Login to DockerHub
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build the tagged Docker image
      run: docker build frontend -t ${{steps.vars.outputs.image}}:${{steps.vars.outputs.tag}}

    - name: Push the tagged Docker image
      run: docker push ${{steps.vars.outputs.image}}:${{steps.vars.outputs.tag}}

  deploy:
    name: Deploy Helm Chart to Kubernetes
    needs: [release-api, release-frontend]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - name: Set some variables
      id: vars
      run: |
        echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/*/})

    - name: deploy
      uses: 'deliverybot/helm@v1'
      with:
        release: 'microservices'
        namespace: 'default'
        chart: 'helm'
        helm: 'helm3'
        token: '${{ github.token }}'
        values: |
          imageVersion: ${{ steps.vars.outputs.tag }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          HUE_USERNAME: ${{ secrets.HUE_USERNAME }}

          GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
          ALLOWED_USERS: ${{ secrets.ALLOWED_USERS }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
